name: 'Deploy Application'
description: 'Build Docker image and deploy via SSH'

inputs:
  environment:
    description: 'Environment name (dev/prod)'
    required: true
  docker_tag:
    description: 'Docker tag to use'
    required: true
  docker_file:
    description: 'Dockerfile to use'
    required: true
  node_env:
    description: 'NODE_ENV value'
    required: true
  container_name:
    description: 'Container name'
    required: true
  host:
    description: 'SSH host'
    required: true
  username:
    description: 'SSH username'
    required: true
  ssh_key:
    description: 'SSH private key'
    required: true
  port:
    description: 'SSH port'
    required: false
    default: '22'
  dockerhub_username:
    description: 'Docker Hub username'
    required: true
  dockerhub_token:
    description: 'Docker Hub token'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.dockerhub_username }}
        password: ${{ inputs.dockerhub_token }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.dockerhub_username }}/charik123-strapi
        tags: |
          type=raw,value=${{ inputs.docker_tag }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./${{ inputs.docker_file }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Deploy to ${{ inputs.environment }} Server via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ inputs.host }}
        username: ${{ inputs.username }}
        key: ${{ inputs.ssh_key }}
        port: ${{ inputs.port }}
        script: |
          # Stop existing container if running
          docker stop ${{ inputs.container_name }} || true
          docker rm ${{ inputs.container_name }} || true
          
          # Pull latest image
          docker pull ${{ inputs.dockerhub_username }}/charik123-strapi:${{ inputs.docker_tag }}
          
          # Run new container
          docker run -d \
            --name ${{ inputs.container_name }} \
            --restart unless-stopped \
            -p 1337:1337 \
            -e NODE_ENV=${{ inputs.node_env }} \
            ${{ inputs.dockerhub_username }}/charik123-strapi:${{ inputs.docker_tag }}
          
          # Clean up old images
          docker image prune -f
