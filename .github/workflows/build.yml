name: Build and Deploy

on:
  push:
    branches:
      - dev
      - stage
      - main
      - devOps/**

permissions:
  packages: write
  contents: read

jobs:
  # Build Jobs
  build-dev:
    if: github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/heads/devOps/')
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/charik-strapi
          tags: |
            type=raw,value=dev

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # build-prod:
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   outputs:
  #     image_tag: ${{ steps.meta.outputs.tags }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Extract metadata
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: ${{ secrets.DOCKERHUB_USERNAME }}/charik-strapi
  #         tags: |
  #           type=raw,value=latest

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         file: ./Dockerfile.prod
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}

  deploy:
    # needs: [build-prod, build-dev]
    # if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    # environment: prod
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Deploy via SSH
        uses: pcjun97/action-setup-docker-host-ssh@v1
        with:
          host: ${{ secrets.PROD_HOST || secrets.DEV_HOST }}
          user: ${{ secrets.PROD_USERNAME || secrets.DEV_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.DEV_PORT || 22 }}
      - name: Execute Deployment Commands
        run: |
          # docker login
          echo "${{secrets.DOCKERHUB_TOKEN}}" | docker login -u ${{secrets.DOCKERHUB_USERNAME}} --password-stdin

          # docker compose
          docker compose pull
          docker compose up -d --remove-orphans

          # # Clean up old images
          docker image prune -f
